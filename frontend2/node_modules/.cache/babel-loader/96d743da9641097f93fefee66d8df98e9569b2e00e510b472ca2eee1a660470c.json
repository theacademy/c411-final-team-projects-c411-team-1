{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yaraj\\\\Documents\\\\mThree Training\\\\repos\\\\c411-final-team-projects-c411-team-1\\\\frontend2\\\\src\\\\components\\\\portfolio\\\\CreatePortfolio.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport portfolioService from '../../services/portfolioService';\nimport userService from '../../services/userService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePortfolio = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    description: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const user = sessionStorage.getItem('user');\n  const userId = user ? JSON.parse(user) : null;\n\n  // In CreatePortfolio.js\n  useEffect(() => {\n    // First check if user exists\n    const checkForUsers = async () => {\n      try {\n        const users = await userService.getAllUsers();\n        if (users.length === 0) {\n          // No users exist, create one\n          const newUser = {\n            name: \"Test User\",\n            email: \"test@example.com\",\n            password: \"password\",\n            balance: 1000.00\n          };\n          await userService.saveUser(newUser);\n        }\n      } catch (err) {\n        console.error(\"Error checking/creating users:\", err);\n      }\n    };\n    checkForUsers();\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Basic validation\n    if (!formData.name.trim()) {\n      setError('Portfolio name is required');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Create portfolio object\n      const portfolioData = {\n        user: {\n          id: userId\n        },\n        // Assuming backend expects a user object with id\n        name: formData.name,\n        description: formData.description,\n        total: 0 // New portfolio starts with zero value\n      };\n\n      // Call the API to create the portfolio\n      const createdPortfolio = await portfolioService.createPortfolio(portfolioData);\n\n      // Navigate to the newly created portfolio\n      navigate(`/portfolios/${createdPortfolio.portfolioId}`);\n    } catch (err) {\n      console.error('Error creating portfolio:', err);\n      setError('Failed to create portfolio. Please try again.');\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-portfolio\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create New Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              className: \"form-label\",\n              children: \"Portfolio Name*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              name: \"name\",\n              className: \"form-control\",\n              value: formData.name,\n              onChange: handleChange,\n              placeholder: \"Enter portfolio name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              className: \"form-label\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"description\",\n              name: \"description\",\n              className: \"form-control\",\n              value: formData.description,\n              onChange: handleChange,\n              placeholder: \"Enter portfolio description (optional)\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: loading,\n              children: loading ? 'Creating...' : 'Create Portfolio'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/portfolios\",\n              className: \"btn btn-secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(CreatePortfolio, \"+SCm4j1fIT9T7bgpNolAfNKTGC8=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePortfolio;\nexport default CreatePortfolio;\nvar _c;\n$RefreshReg$(_c, \"CreatePortfolio\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","portfolioService","userService","jsxDEV","_jsxDEV","CreatePortfolio","_s","navigate","formData","setFormData","name","description","loading","setLoading","error","setError","user","sessionStorage","getItem","userId","JSON","parse","checkForUsers","users","getAllUsers","length","newUser","email","password","balance","saveUser","err","console","handleChange","e","value","target","handleSubmit","preventDefault","trim","portfolioData","id","total","createdPortfolio","createPortfolio","portfolioId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","placeholder","required","rows","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/yaraj/Documents/mThree Training/repos/c411-final-team-projects-c411-team-1/frontend2/src/components/portfolio/CreatePortfolio.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport portfolioService from '../../services/portfolioService';\r\nimport userService from '../../services/userService';\r\n\r\nconst CreatePortfolio = () => {\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        description: '',\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const user = sessionStorage.getItem('user');\r\n    const userId = user ? JSON.parse(user) : null;\r\n\r\n    // In CreatePortfolio.js\r\n    useEffect(() => {\r\n        // First check if user exists\r\n        const checkForUsers = async () => {\r\n            try {\r\n                const users = await userService.getAllUsers();\r\n\r\n                if (users.length === 0) {\r\n                    // No users exist, create one\r\n                    const newUser = {\r\n                        name: \"Test User\",\r\n                        email: \"test@example.com\",\r\n                        password: \"password\",\r\n                        balance: 1000.00\r\n                    };\r\n\r\n                    await userService.saveUser(newUser);\r\n                }\r\n            } catch (err) {\r\n                console.error(\"Error checking/creating users:\", err);\r\n            }\r\n        };\r\n\r\n        checkForUsers();\r\n    }, []);\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Basic validation\r\n        if (!formData.name.trim()) {\r\n            setError('Portfolio name is required');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n\r\n            // Create portfolio object\r\n            const portfolioData = {\r\n                user: { id: userId }, // Assuming backend expects a user object with id\r\n                name: formData.name,\r\n                description: formData.description,\r\n                total: 0, // New portfolio starts with zero value\r\n            };\r\n\r\n            // Call the API to create the portfolio\r\n            const createdPortfolio = await portfolioService.createPortfolio(portfolioData);\r\n\r\n            // Navigate to the newly created portfolio\r\n            navigate(`/portfolios/${createdPortfolio.portfolioId}`);\r\n        } catch (err) {\r\n            console.error('Error creating portfolio:', err);\r\n            setError('Failed to create portfolio. Please try again.');\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"create-portfolio\">\r\n            <div className=\"page-header\">\r\n                <h1>Create New Portfolio</h1>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    {error && (\r\n                        <div className=\"alert alert-danger\">{error}</div>\r\n                    )}\r\n\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\" className=\"form-label\">Portfolio Name*</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                name=\"name\"\r\n                                className=\"form-control\"\r\n                                value={formData.name}\r\n                                onChange={handleChange}\r\n                                placeholder=\"Enter portfolio name\"\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"description\" className=\"form-label\">Description</label>\r\n                            <textarea\r\n                                id=\"description\"\r\n                                name=\"description\"\r\n                                className=\"form-control\"\r\n                                value={formData.description}\r\n                                onChange={handleChange}\r\n                                placeholder=\"Enter portfolio description (optional)\"\r\n                                rows=\"3\"\r\n                            ></textarea>\r\n                        </div>\r\n\r\n                        <div className=\"form-actions\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary\"\r\n                                disabled={loading}\r\n                            >\r\n                                {loading ? 'Creating...' : 'Create Portfolio'}\r\n                            </button>\r\n                            <Link to=\"/portfolios\" className=\"btn btn-secondary\">\r\n                                Cancel\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreatePortfolio;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}