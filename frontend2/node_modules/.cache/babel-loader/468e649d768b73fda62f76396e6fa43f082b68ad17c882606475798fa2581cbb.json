{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yaraj\\\\Documents\\\\mThree Training\\\\repos\\\\c411-final-team-projects-c411-team-1\\\\frontend2\\\\src\\\\components\\\\transaction\\\\ExecuteTransaction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation, Link } from 'react-router-dom';\nimport portfolioService from '../../services/portfolioService';\nimport stockService from '../../services/stockService';\nimport transactionService from '../../services/transactionService';\nimport Loading from '../common/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExecuteTransaction = () => {\n  _s();\n  var _prefillData$stock;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const user = sessionStorage.getItem('user');\n  const userId = user ? JSON.parse(user) : null;\n\n  // Check if we have pre-filled data from navigation state\n  const prefillData = location.state || {};\n  const [formData, setFormData] = useState({\n    portfolioId: prefillData.portfolioId || '',\n    stockSymbol: ((_prefillData$stock = prefillData.stock) === null || _prefillData$stock === void 0 ? void 0 : _prefillData$stock.symbol) || '',\n    quantity: 1,\n    price: prefillData.price || '',\n    transactionType: prefillData.action || 'BUY'\n  });\n  const [portfolios, setPortfolios] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [stockSymbolValid, setStockSymbolValid] = useState(!!prefillData.stock);\n  const [loading, setLoading] = useState(false);\n  const [initialLoading, setInitialLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        // Fetch user portfolios\n        const portfoliosData = await portfolioService.getPortfoliosByUserId(userId);\n        setPortfolios(portfoliosData);\n\n        // If we have a stock symbol, validate it\n        if (formData.stockSymbol) {\n          const stockData = await stockService.getStockBySymbol(formData.stockSymbol);\n          if (stockData) {\n            setStockSymbolValid(true);\n            if (!formData.price) {\n              // Get current price if not provided\n              const priceData = await stockService.getCurrentPrice(formData.stockSymbol);\n              setFormData(prev => ({\n                ...prev,\n                price: priceData\n              }));\n            }\n          }\n        }\n        setInitialLoading(false);\n      } catch (err) {\n        console.error('Error fetching initial data:', err);\n        setError('Failed to load data. Please try again.');\n        setInitialLoading(false);\n      }\n    };\n    fetchInitialData();\n  }, [userId, formData.stockSymbol]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // Reset stockSymbolValid if the stock symbol changes\n    if (name === 'stockSymbol') {\n      setStockSymbolValid(false);\n    }\n  };\n  const handleSearchStock = async () => {\n    if (!formData.stockSymbol.trim()) {\n      setError('Please enter a stock symbol');\n      return;\n    }\n    try {\n      setLoading(true);\n\n      // First try to get the stock directly by symbol\n      try {\n        const stock = await stockService.getStockBySymbol(formData.stockSymbol);\n        if (stock) {\n          setStockSymbolValid(true);\n          // Get current price\n          const price = await stockService.getCurrentPrice(formData.stockSymbol);\n          setFormData(prev => ({\n            ...prev,\n            price\n          }));\n          setLoading(false);\n          return;\n        }\n      } catch (err) {\n        // If not found by exact symbol, search\n        console.log('Stock not found by exact symbol, searching...');\n      }\n\n      // Search by keyword\n      const results = await stockService.searchStocks(formData.stockSymbol);\n      setSearchResults(results);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error searching stocks:', err);\n      if (err.response && err.response.status === 503) {\n        setError('API rate limit reached. Please try again later.');\n      } else {\n        setError('Failed to search stocks. Please try again.');\n      }\n      setLoading(false);\n    }\n  };\n  const selectStock = async stock => {\n    try {\n      setFormData(prev => ({\n        ...prev,\n        stockSymbol: stock.symbol\n      }));\n      setStockSymbolValid(true);\n      setSearchResults([]);\n\n      // Get current price\n      const price = await stockService.getCurrentPrice(stock.symbol);\n      setFormData(prev => ({\n        ...prev,\n        price\n      }));\n    } catch (err) {\n      console.error('Error fetching stock price:', err);\n      setError('Failed to fetch stock price. Please enter it manually.');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Basic validation\n    if (!formData.portfolioId) {\n      setError('Please select a portfolio');\n      return;\n    }\n    if (!stockSymbolValid) {\n      setError('Please enter a valid stock symbol and verify it');\n      return;\n    }\n    if (!formData.quantity || formData.quantity <= 0) {\n      setError('Please enter a valid quantity');\n      return;\n    }\n    if (!formData.price || parseFloat(formData.price) <= 0) {\n      setError('Please enter a valid price');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      const transactionData = {\n        portfolioId: formData.portfolioId,\n        stockSymbol: formData.stockSymbol,\n        quantity: parseInt(formData.quantity),\n        price: parseFloat(formData.price)\n      };\n      let result;\n      if (formData.transactionType === 'BUY') {\n        result = await transactionService.executeBuyTransaction(transactionData);\n      } else {\n        result = await transactionService.executeSellTransaction(transactionData);\n      }\n      setSuccess(`Transaction executed successfully!`);\n      setTimeout(() => {\n        navigate(`/portfolios/${formData.portfolioId}`);\n      }, 2000);\n    } catch (err) {\n      console.error('Error executing transaction:', err);\n      if (err.response && err.response.status === 409) {\n        setError('Not enough balance or stocks to execute this transaction.');\n      } else {\n        setError('Failed to execute transaction. Please try again.');\n      }\n      setLoading(false);\n    }\n  };\n  if (initialLoading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 32\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"execute-transaction\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Execute Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-success\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"transactionType\",\n              className: \"form-label\",\n              children: \"Transaction Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"transactionType\",\n              name: \"transactionType\",\n              className: \"form-control\",\n              value: formData.transactionType,\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"BUY\",\n                children: \"Buy Stock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"SELL\",\n                children: \"Sell Stock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"portfolioId\",\n              className: \"form-label\",\n              children: \"Select Portfolio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"portfolioId\",\n              name: \"portfolioId\",\n              className: \"form-control\",\n              value: formData.portfolioId,\n              onChange: handleChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a portfolio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this), portfolios.map(portfolio => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: portfolio.portfolioId,\n                children: portfolio.name\n              }, portfolio.portfolioId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"stockSymbol\",\n              className: \"form-label\",\n              children: \"Stock Symbol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"stockSymbol\",\n                name: \"stockSymbol\",\n                className: \"form-control\",\n                value: formData.stockSymbol,\n                onChange: handleChange,\n                placeholder: \"Enter stock symbol (e.g., AAPL)\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-secondary\",\n                onClick: handleSearchStock,\n                disabled: loading,\n                children: loading ? 'Verifying...' : 'Verify Symbol'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this), stockSymbolValid && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-success mt-2\",\n              children: \"Stock symbol verified successfully!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this), searchResults.length > 0 && !stockSymbolValid && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Search Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid\",\n              children: searchResults.map(stock => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card stock-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: stock.symbol\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: stock.companyName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-footer\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-primary\",\n                    onClick: () => selectStock(stock),\n                    children: \"Select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 45\n                }, this)]\n              }, stock.symbol, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"quantity\",\n              className: \"form-label\",\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"quantity\",\n              name: \"quantity\",\n              className: \"form-control\",\n              value: formData.quantity,\n              onChange: handleChange,\n              min: \"1\",\n              step: \"1\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"price\",\n              className: \"form-label\",\n              children: \"Price per Share ($)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"price\",\n              name: \"price\",\n              className: \"form-control\",\n              value: formData.price,\n              onChange: handleChange,\n              min: \"0.01\",\n              step: \"0.01\",\n              placeholder: \"Current market price\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Transaction Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 36\n                }, this), \" \", formData.transactionType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Total Amount:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 36\n                }, this), \" $\", (parseFloat(formData.price || 0) * parseInt(formData.quantity || 0)).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: loading || !stockSymbolValid,\n              children: loading ? 'Processing...' : 'Execute Transaction'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/transactions\",\n              className: \"btn btn-secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 9\n  }, this);\n};\n_s(ExecuteTransaction, \"u75ecOzPuZyIwzZMcTQwnP3UN1Q=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ExecuteTransaction;\nexport default ExecuteTransaction;\nvar _c;\n$RefreshReg$(_c, \"ExecuteTransaction\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","Link","portfolioService","stockService","transactionService","Loading","jsxDEV","_jsxDEV","ExecuteTransaction","_s","_prefillData$stock","navigate","location","user","sessionStorage","getItem","userId","JSON","parse","prefillData","state","formData","setFormData","portfolioId","stockSymbol","stock","symbol","quantity","price","transactionType","action","portfolios","setPortfolios","searchResults","setSearchResults","stockSymbolValid","setStockSymbolValid","loading","setLoading","initialLoading","setInitialLoading","error","setError","success","setSuccess","fetchInitialData","portfoliosData","getPortfoliosByUserId","stockData","getStockBySymbol","priceData","getCurrentPrice","prev","err","console","handleChange","e","name","value","target","handleSearchStock","trim","log","results","searchStocks","response","status","selectStock","handleSubmit","preventDefault","parseFloat","transactionData","parseInt","result","executeBuyTransaction","executeSellTransaction","setTimeout","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onSubmit","htmlFor","id","onChange","required","map","portfolio","type","placeholder","onClick","disabled","length","companyName","min","step","toFixed","to","_c","$RefreshReg$"],"sources":["C:/Users/yaraj/Documents/mThree Training/repos/c411-final-team-projects-c411-team-1/frontend2/src/components/transaction/ExecuteTransaction.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation, Link } from 'react-router-dom';\r\nimport portfolioService from '../../services/portfolioService';\r\nimport stockService from '../../services/stockService';\r\nimport transactionService from '../../services/transactionService';\r\nimport Loading from '../common/Loading';\r\n\r\nconst ExecuteTransaction = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const user = sessionStorage.getItem('user');\r\n    const userId = user ? JSON.parse(user) : null;\r\n\r\n    // Check if we have pre-filled data from navigation state\r\n    const prefillData = location.state || {};\r\n\r\n    const [formData, setFormData] = useState({\r\n        portfolioId: prefillData.portfolioId || '',\r\n        stockSymbol: prefillData.stock?.symbol || '',\r\n        quantity: 1,\r\n        price: prefillData.price || '',\r\n        transactionType: prefillData.action || 'BUY'\r\n    });\r\n\r\n    const [portfolios, setPortfolios] = useState([]);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [stockSymbolValid, setStockSymbolValid] = useState(!!prefillData.stock);\r\n    const [loading, setLoading] = useState(false);\r\n    const [initialLoading, setInitialLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [success, setSuccess] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchInitialData = async () => {\r\n            try {\r\n                // Fetch user portfolios\r\n                const portfoliosData = await portfolioService.getPortfoliosByUserId(userId);\r\n                setPortfolios(portfoliosData);\r\n\r\n                // If we have a stock symbol, validate it\r\n                if (formData.stockSymbol) {\r\n                    const stockData = await stockService.getStockBySymbol(formData.stockSymbol);\r\n                    if (stockData) {\r\n                        setStockSymbolValid(true);\r\n                        if (!formData.price) {\r\n                            // Get current price if not provided\r\n                            const priceData = await stockService.getCurrentPrice(formData.stockSymbol);\r\n                            setFormData(prev => ({...prev, price: priceData}));\r\n                        }\r\n                    }\r\n                }\r\n\r\n                setInitialLoading(false);\r\n            } catch (err) {\r\n                console.error('Error fetching initial data:', err);\r\n                setError('Failed to load data. Please try again.');\r\n                setInitialLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchInitialData();\r\n    }, [userId, formData.stockSymbol]);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n\r\n        // Reset stockSymbolValid if the stock symbol changes\r\n        if (name === 'stockSymbol') {\r\n            setStockSymbolValid(false);\r\n        }\r\n    };\r\n\r\n    const handleSearchStock = async () => {\r\n        if (!formData.stockSymbol.trim()) {\r\n            setError('Please enter a stock symbol');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n\r\n            // First try to get the stock directly by symbol\r\n            try {\r\n                const stock = await stockService.getStockBySymbol(formData.stockSymbol);\r\n                if (stock) {\r\n                    setStockSymbolValid(true);\r\n                    // Get current price\r\n                    const price = await stockService.getCurrentPrice(formData.stockSymbol);\r\n                    setFormData(prev => ({...prev, price}));\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n            } catch (err) {\r\n                // If not found by exact symbol, search\r\n                console.log('Stock not found by exact symbol, searching...');\r\n            }\r\n\r\n            // Search by keyword\r\n            const results = await stockService.searchStocks(formData.stockSymbol);\r\n            setSearchResults(results);\r\n            setLoading(false);\r\n        } catch (err) {\r\n            console.error('Error searching stocks:', err);\r\n\r\n            if (err.response && err.response.status === 503) {\r\n                setError('API rate limit reached. Please try again later.');\r\n            } else {\r\n                setError('Failed to search stocks. Please try again.');\r\n            }\r\n\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const selectStock = async (stock) => {\r\n        try {\r\n            setFormData(prev => ({...prev, stockSymbol: stock.symbol}));\r\n            setStockSymbolValid(true);\r\n            setSearchResults([]);\r\n\r\n            // Get current price\r\n            const price = await stockService.getCurrentPrice(stock.symbol);\r\n            setFormData(prev => ({...prev, price}));\r\n        } catch (err) {\r\n            console.error('Error fetching stock price:', err);\r\n            setError('Failed to fetch stock price. Please enter it manually.');\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Basic validation\r\n        if (!formData.portfolioId) {\r\n            setError('Please select a portfolio');\r\n            return;\r\n        }\r\n\r\n        if (!stockSymbolValid) {\r\n            setError('Please enter a valid stock symbol and verify it');\r\n            return;\r\n        }\r\n\r\n        if (!formData.quantity || formData.quantity <= 0) {\r\n            setError('Please enter a valid quantity');\r\n            return;\r\n        }\r\n\r\n        if (!formData.price || parseFloat(formData.price) <= 0) {\r\n            setError('Please enter a valid price');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n\r\n            const transactionData = {\r\n                portfolioId: formData.portfolioId,\r\n                stockSymbol: formData.stockSymbol,\r\n                quantity: parseInt(formData.quantity),\r\n                price: parseFloat(formData.price)\r\n            };\r\n\r\n            let result;\r\n            if (formData.transactionType === 'BUY') {\r\n                result = await transactionService.executeBuyTransaction(transactionData);\r\n            } else {\r\n                result = await transactionService.executeSellTransaction(transactionData);\r\n            }\r\n\r\n            setSuccess(`Transaction executed successfully!`);\r\n            setTimeout(() => {\r\n                navigate(`/portfolios/${formData.portfolioId}`);\r\n            }, 2000);\r\n        } catch (err) {\r\n            console.error('Error executing transaction:', err);\r\n\r\n            if (err.response && err.response.status === 409) {\r\n                setError('Not enough balance or stocks to execute this transaction.');\r\n            } else {\r\n                setError('Failed to execute transaction. Please try again.');\r\n            }\r\n\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    if (initialLoading) return <Loading />;\r\n\r\n    return (\r\n        <div className=\"execute-transaction\">\r\n            <div className=\"page-header\">\r\n                <h1>Execute Transaction</h1>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    {error && (\r\n                        <div className=\"alert alert-danger\">{error}</div>\r\n                    )}\r\n\r\n                    {success && (\r\n                        <div className=\"alert alert-success\">{success}</div>\r\n                    )}\r\n\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"transactionType\" className=\"form-label\">Transaction Type</label>\r\n                            <select\r\n                                id=\"transactionType\"\r\n                                name=\"transactionType\"\r\n                                className=\"form-control\"\r\n                                value={formData.transactionType}\r\n                                onChange={handleChange}\r\n                            >\r\n                                <option value=\"BUY\">Buy Stock</option>\r\n                                <option value=\"SELL\">Sell Stock</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"portfolioId\" className=\"form-label\">Select Portfolio</label>\r\n                            <select\r\n                                id=\"portfolioId\"\r\n                                name=\"portfolioId\"\r\n                                className=\"form-control\"\r\n                                value={formData.portfolioId}\r\n                                onChange={handleChange}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select a portfolio</option>\r\n                                {portfolios.map((portfolio) => (\r\n                                    <option key={portfolio.portfolioId} value={portfolio.portfolioId}>\r\n                                        {portfolio.name}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"stockSymbol\" className=\"form-label\">Stock Symbol</label>\r\n                            <div className=\"search-input-container\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"stockSymbol\"\r\n                                    name=\"stockSymbol\"\r\n                                    className=\"form-control\"\r\n                                    value={formData.stockSymbol}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Enter stock symbol (e.g., AAPL)\"\r\n                                    required\r\n                                />\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-secondary\"\r\n                                    onClick={handleSearchStock}\r\n                                    disabled={loading}\r\n                                >\r\n                                    {loading ? 'Verifying...' : 'Verify Symbol'}\r\n                                </button>\r\n                            </div>\r\n                            {stockSymbolValid && (\r\n                                <div className=\"alert alert-success mt-2\">\r\n                                    Stock symbol verified successfully!\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        {searchResults.length > 0 && !stockSymbolValid && (\r\n                            <div className=\"search-results\">\r\n                                <h3>Search Results</h3>\r\n                                <div className=\"grid\">\r\n                                    {searchResults.map((stock) => (\r\n                                        <div key={stock.symbol} className=\"card stock-card\">\r\n                                            <div className=\"card-header\">\r\n                                                <h3>{stock.symbol}</h3>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <p>{stock.companyName}</p>\r\n                                            </div>\r\n                                            <div className=\"card-footer\">\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    className=\"btn btn-primary\"\r\n                                                    onClick={() => selectStock(stock)}\r\n                                                >\r\n                                                    Select\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"quantity\" className=\"form-label\">Quantity</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id=\"quantity\"\r\n                                name=\"quantity\"\r\n                                className=\"form-control\"\r\n                                value={formData.quantity}\r\n                                onChange={handleChange}\r\n                                min=\"1\"\r\n                                step=\"1\"\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"price\" className=\"form-label\">Price per Share ($)</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id=\"price\"\r\n                                name=\"price\"\r\n                                className=\"form-control\"\r\n                                value={formData.price}\r\n                                onChange={handleChange}\r\n                                min=\"0.01\"\r\n                                step=\"0.01\"\r\n                                placeholder=\"Current market price\"\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Transaction Summary</label>\r\n                            <div className=\"summary-box\">\r\n                                <p><strong>Type:</strong> {formData.transactionType}</p>\r\n                                <p><strong>Total Amount:</strong> ${(\r\n                                    parseFloat(formData.price || 0) * parseInt(formData.quantity || 0)\r\n                                ).toFixed(2)}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-actions\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary\"\r\n                                disabled={loading || !stockSymbolValid}\r\n                            >\r\n                                {loading ? 'Processing...' : 'Execute Transaction'}\r\n                            </button>\r\n                            <Link to=\"/transactions\" className=\"btn btn-secondary\">\r\n                                Cancel\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExecuteTransaction;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACjE,OAAOC,gBAAgB,MAAM,iCAAiC;AAC9D,OAAOC,YAAY,MAAM,6BAA6B;AACtD,OAAOC,kBAAkB,MAAM,mCAAmC;AAClE,OAAOC,OAAO,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,kBAAA;EAC7B,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,IAAI,GAAGC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;EAC3C,MAAMC,MAAM,GAAGH,IAAI,GAAGI,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,GAAG,IAAI;;EAE7C;EACA,MAAMM,WAAW,GAAGP,QAAQ,CAACQ,KAAK,IAAI,CAAC,CAAC;EAExC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC;IACrC0B,WAAW,EAAEJ,WAAW,CAACI,WAAW,IAAI,EAAE;IAC1CC,WAAW,EAAE,EAAAd,kBAAA,GAAAS,WAAW,CAACM,KAAK,cAAAf,kBAAA,uBAAjBA,kBAAA,CAAmBgB,MAAM,KAAI,EAAE;IAC5CC,QAAQ,EAAE,CAAC;IACXC,KAAK,EAAET,WAAW,CAACS,KAAK,IAAI,EAAE;IAC9BC,eAAe,EAAEV,WAAW,CAACW,MAAM,IAAI;EAC3C,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoC,aAAa,EAAEC,gBAAgB,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACsC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvC,QAAQ,CAAC,CAAC,CAACsB,WAAW,CAACM,KAAK,CAAC;EAC7E,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC0C,cAAc,EAAEC,iBAAiB,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC4C,KAAK,EAAEC,QAAQ,CAAC,GAAG7C,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC8C,OAAO,EAAEC,UAAU,CAAC,GAAG/C,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAM+C,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACA;QACA,MAAMC,cAAc,GAAG,MAAM5C,gBAAgB,CAAC6C,qBAAqB,CAAC/B,MAAM,CAAC;QAC3EgB,aAAa,CAACc,cAAc,CAAC;;QAE7B;QACA,IAAIzB,QAAQ,CAACG,WAAW,EAAE;UACtB,MAAMwB,SAAS,GAAG,MAAM7C,YAAY,CAAC8C,gBAAgB,CAAC5B,QAAQ,CAACG,WAAW,CAAC;UAC3E,IAAIwB,SAAS,EAAE;YACXZ,mBAAmB,CAAC,IAAI,CAAC;YACzB,IAAI,CAACf,QAAQ,CAACO,KAAK,EAAE;cACjB;cACA,MAAMsB,SAAS,GAAG,MAAM/C,YAAY,CAACgD,eAAe,CAAC9B,QAAQ,CAACG,WAAW,CAAC;cAC1EF,WAAW,CAAC8B,IAAI,KAAK;gBAAC,GAAGA,IAAI;gBAAExB,KAAK,EAAEsB;cAAS,CAAC,CAAC,CAAC;YACtD;UACJ;QACJ;QAEAV,iBAAiB,CAAC,KAAK,CAAC;MAC5B,CAAC,CAAC,OAAOa,GAAG,EAAE;QACVC,OAAO,CAACb,KAAK,CAAC,8BAA8B,EAAEY,GAAG,CAAC;QAClDX,QAAQ,CAAC,wCAAwC,CAAC;QAClDF,iBAAiB,CAAC,KAAK,CAAC;MAC5B;IACJ,CAAC;IAEDK,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,CAAC7B,MAAM,EAAEK,QAAQ,CAACG,WAAW,CAAC,CAAC;EAElC,MAAM+B,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCrC,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACoC,IAAI,GAAGC;IAAM,CAAC,CAAC;;IAE3C;IACA,IAAID,IAAI,KAAK,aAAa,EAAE;MACxBrB,mBAAmB,CAAC,KAAK,CAAC;IAC9B;EACJ,CAAC;EAED,MAAMwB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACvC,QAAQ,CAACG,WAAW,CAACqC,IAAI,CAAC,CAAC,EAAE;MAC9BnB,QAAQ,CAAC,6BAA6B,CAAC;MACvC;IACJ;IAEA,IAAI;MACAJ,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,IAAI;QACA,MAAMb,KAAK,GAAG,MAAMtB,YAAY,CAAC8C,gBAAgB,CAAC5B,QAAQ,CAACG,WAAW,CAAC;QACvE,IAAIC,KAAK,EAAE;UACPW,mBAAmB,CAAC,IAAI,CAAC;UACzB;UACA,MAAMR,KAAK,GAAG,MAAMzB,YAAY,CAACgD,eAAe,CAAC9B,QAAQ,CAACG,WAAW,CAAC;UACtEF,WAAW,CAAC8B,IAAI,KAAK;YAAC,GAAGA,IAAI;YAAExB;UAAK,CAAC,CAAC,CAAC;UACvCU,UAAU,CAAC,KAAK,CAAC;UACjB;QACJ;MACJ,CAAC,CAAC,OAAOe,GAAG,EAAE;QACV;QACAC,OAAO,CAACQ,GAAG,CAAC,+CAA+C,CAAC;MAChE;;MAEA;MACA,MAAMC,OAAO,GAAG,MAAM5D,YAAY,CAAC6D,YAAY,CAAC3C,QAAQ,CAACG,WAAW,CAAC;MACrEU,gBAAgB,CAAC6B,OAAO,CAAC;MACzBzB,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOe,GAAG,EAAE;MACVC,OAAO,CAACb,KAAK,CAAC,yBAAyB,EAAEY,GAAG,CAAC;MAE7C,IAAIA,GAAG,CAACY,QAAQ,IAAIZ,GAAG,CAACY,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC7CxB,QAAQ,CAAC,iDAAiD,CAAC;MAC/D,CAAC,MAAM;QACHA,QAAQ,CAAC,4CAA4C,CAAC;MAC1D;MAEAJ,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAM6B,WAAW,GAAG,MAAO1C,KAAK,IAAK;IACjC,IAAI;MACAH,WAAW,CAAC8B,IAAI,KAAK;QAAC,GAAGA,IAAI;QAAE5B,WAAW,EAAEC,KAAK,CAACC;MAAM,CAAC,CAAC,CAAC;MAC3DU,mBAAmB,CAAC,IAAI,CAAC;MACzBF,gBAAgB,CAAC,EAAE,CAAC;;MAEpB;MACA,MAAMN,KAAK,GAAG,MAAMzB,YAAY,CAACgD,eAAe,CAAC1B,KAAK,CAACC,MAAM,CAAC;MAC9DJ,WAAW,CAAC8B,IAAI,KAAK;QAAC,GAAGA,IAAI;QAAExB;MAAK,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,OAAOyB,GAAG,EAAE;MACVC,OAAO,CAACb,KAAK,CAAC,6BAA6B,EAAEY,GAAG,CAAC;MACjDX,QAAQ,CAAC,wDAAwD,CAAC;IACtE;EACJ,CAAC;EAED,MAAM0B,YAAY,GAAG,MAAOZ,CAAC,IAAK;IAC9BA,CAAC,CAACa,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAAChD,QAAQ,CAACE,WAAW,EAAE;MACvBmB,QAAQ,CAAC,2BAA2B,CAAC;MACrC;IACJ;IAEA,IAAI,CAACP,gBAAgB,EAAE;MACnBO,QAAQ,CAAC,iDAAiD,CAAC;MAC3D;IACJ;IAEA,IAAI,CAACrB,QAAQ,CAACM,QAAQ,IAAIN,QAAQ,CAACM,QAAQ,IAAI,CAAC,EAAE;MAC9Ce,QAAQ,CAAC,+BAA+B,CAAC;MACzC;IACJ;IAEA,IAAI,CAACrB,QAAQ,CAACO,KAAK,IAAI0C,UAAU,CAACjD,QAAQ,CAACO,KAAK,CAAC,IAAI,CAAC,EAAE;MACpDc,QAAQ,CAAC,4BAA4B,CAAC;MACtC;IACJ;IAEA,IAAI;MACAJ,UAAU,CAAC,IAAI,CAAC;MAChBI,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAM6B,eAAe,GAAG;QACpBhD,WAAW,EAAEF,QAAQ,CAACE,WAAW;QACjCC,WAAW,EAAEH,QAAQ,CAACG,WAAW;QACjCG,QAAQ,EAAE6C,QAAQ,CAACnD,QAAQ,CAACM,QAAQ,CAAC;QACrCC,KAAK,EAAE0C,UAAU,CAACjD,QAAQ,CAACO,KAAK;MACpC,CAAC;MAED,IAAI6C,MAAM;MACV,IAAIpD,QAAQ,CAACQ,eAAe,KAAK,KAAK,EAAE;QACpC4C,MAAM,GAAG,MAAMrE,kBAAkB,CAACsE,qBAAqB,CAACH,eAAe,CAAC;MAC5E,CAAC,MAAM;QACHE,MAAM,GAAG,MAAMrE,kBAAkB,CAACuE,sBAAsB,CAACJ,eAAe,CAAC;MAC7E;MAEA3B,UAAU,CAAC,oCAAoC,CAAC;MAChDgC,UAAU,CAAC,MAAM;QACbjE,QAAQ,CAAC,eAAeU,QAAQ,CAACE,WAAW,EAAE,CAAC;MACnD,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC,CAAC,OAAO8B,GAAG,EAAE;MACVC,OAAO,CAACb,KAAK,CAAC,8BAA8B,EAAEY,GAAG,CAAC;MAElD,IAAIA,GAAG,CAACY,QAAQ,IAAIZ,GAAG,CAACY,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC7CxB,QAAQ,CAAC,2DAA2D,CAAC;MACzE,CAAC,MAAM;QACHA,QAAQ,CAAC,kDAAkD,CAAC;MAChE;MAEAJ,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,IAAIC,cAAc,EAAE,oBAAOhC,OAAA,CAACF,OAAO;IAAAwE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEtC,oBACIzE,OAAA;IAAK0E,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAChC3E,OAAA;MAAK0E,SAAS,EAAC,aAAa;MAAAC,QAAA,eACxB3E,OAAA;QAAA2E,QAAA,EAAI;MAAmB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eAENzE,OAAA;MAAK0E,SAAS,EAAC,MAAM;MAAAC,QAAA,eACjB3E,OAAA;QAAK0E,SAAS,EAAC,WAAW;QAAAC,QAAA,GACrBzC,KAAK,iBACFlC,OAAA;UAAK0E,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAEzC;QAAK;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CACnD,EAEArC,OAAO,iBACJpC,OAAA;UAAK0E,SAAS,EAAC,qBAAqB;UAAAC,QAAA,EAAEvC;QAAO;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CACtD,eAEDzE,OAAA;UAAM4E,QAAQ,EAAEf,YAAa;UAAAc,QAAA,gBACzB3E,OAAA;YAAK0E,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvB3E,OAAA;cAAO6E,OAAO,EAAC,iBAAiB;cAACH,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAgB;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAChFzE,OAAA;cACI8E,EAAE,EAAC,iBAAiB;cACpB5B,IAAI,EAAC,iBAAiB;cACtBwB,SAAS,EAAC,cAAc;cACxBvB,KAAK,EAAErC,QAAQ,CAACQ,eAAgB;cAChCyD,QAAQ,EAAE/B,YAAa;cAAA2B,QAAA,gBAEvB3E,OAAA;gBAAQmD,KAAK,EAAC,KAAK;gBAAAwB,QAAA,EAAC;cAAS;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtCzE,OAAA;gBAAQmD,KAAK,EAAC,MAAM;gBAAAwB,QAAA,EAAC;cAAU;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC,eAENzE,OAAA;YAAK0E,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvB3E,OAAA;cAAO6E,OAAO,EAAC,aAAa;cAACH,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAgB;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC5EzE,OAAA;cACI8E,EAAE,EAAC,aAAa;cAChB5B,IAAI,EAAC,aAAa;cAClBwB,SAAS,EAAC,cAAc;cACxBvB,KAAK,EAAErC,QAAQ,CAACE,WAAY;cAC5B+D,QAAQ,EAAE/B,YAAa;cACvBgC,QAAQ;cAAAL,QAAA,gBAER3E,OAAA;gBAAQmD,KAAK,EAAC,EAAE;gBAAAwB,QAAA,EAAC;cAAkB;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EAC3CjD,UAAU,CAACyD,GAAG,CAAEC,SAAS,iBACtBlF,OAAA;gBAAoCmD,KAAK,EAAE+B,SAAS,CAAClE,WAAY;gBAAA2D,QAAA,EAC5DO,SAAS,CAAChC;cAAI,GADNgC,SAAS,CAAClE,WAAW;gBAAAsD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAE1B,CACX,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC,eAENzE,OAAA;YAAK0E,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvB3E,OAAA;cAAO6E,OAAO,EAAC,aAAa;cAACH,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAY;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxEzE,OAAA;cAAK0E,SAAS,EAAC,wBAAwB;cAAAC,QAAA,gBACnC3E,OAAA;gBACImF,IAAI,EAAC,MAAM;gBACXL,EAAE,EAAC,aAAa;gBAChB5B,IAAI,EAAC,aAAa;gBAClBwB,SAAS,EAAC,cAAc;gBACxBvB,KAAK,EAAErC,QAAQ,CAACG,WAAY;gBAC5B8D,QAAQ,EAAE/B,YAAa;gBACvBoC,WAAW,EAAC,iCAAiC;gBAC7CJ,QAAQ;cAAA;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC,eACFzE,OAAA;gBACImF,IAAI,EAAC,QAAQ;gBACbT,SAAS,EAAC,mBAAmB;gBAC7BW,OAAO,EAAEhC,iBAAkB;gBAC3BiC,QAAQ,EAAExD,OAAQ;gBAAA6C,QAAA,EAEjB7C,OAAO,GAAG,cAAc,GAAG;cAAe;gBAAAwC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC,EACL7C,gBAAgB,iBACb5B,OAAA;cAAK0E,SAAS,EAAC,0BAA0B;cAAAC,QAAA,EAAC;YAE1C;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CACR;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,EAEL/C,aAAa,CAAC6D,MAAM,GAAG,CAAC,IAAI,CAAC3D,gBAAgB,iBAC1C5B,OAAA;YAAK0E,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC3B3E,OAAA;cAAA2E,QAAA,EAAI;YAAc;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvBzE,OAAA;cAAK0E,SAAS,EAAC,MAAM;cAAAC,QAAA,EAChBjD,aAAa,CAACuD,GAAG,CAAE/D,KAAK,iBACrBlB,OAAA;gBAAwB0E,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,gBAC/C3E,OAAA;kBAAK0E,SAAS,EAAC,aAAa;kBAAAC,QAAA,eACxB3E,OAAA;oBAAA2E,QAAA,EAAKzD,KAAK,CAACC;kBAAM;oBAAAmD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtB,CAAC,eACNzE,OAAA;kBAAK0E,SAAS,EAAC,WAAW;kBAAAC,QAAA,eACtB3E,OAAA;oBAAA2E,QAAA,EAAIzD,KAAK,CAACsE;kBAAW;oBAAAlB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzB,CAAC,eACNzE,OAAA;kBAAK0E,SAAS,EAAC,aAAa;kBAAAC,QAAA,eACxB3E,OAAA;oBACImF,IAAI,EAAC,QAAQ;oBACbT,SAAS,EAAC,iBAAiB;oBAC3BW,OAAO,EAAEA,CAAA,KAAMzB,WAAW,CAAC1C,KAAK,CAAE;oBAAAyD,QAAA,EACrC;kBAED;oBAAAL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACR,CAAC;cAAA,GAfAvD,KAAK,CAACC,MAAM;gBAAAmD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAgBjB,CACR;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CACR,eAEDzE,OAAA;YAAK0E,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvB3E,OAAA;cAAO6E,OAAO,EAAC,UAAU;cAACH,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAQ;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACjEzE,OAAA;cACImF,IAAI,EAAC,QAAQ;cACbL,EAAE,EAAC,UAAU;cACb5B,IAAI,EAAC,UAAU;cACfwB,SAAS,EAAC,cAAc;cACxBvB,KAAK,EAAErC,QAAQ,CAACM,QAAS;cACzB2D,QAAQ,EAAE/B,YAAa;cACvByC,GAAG,EAAC,GAAG;cACPC,IAAI,EAAC,GAAG;cACRV,QAAQ;YAAA;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eAENzE,OAAA;YAAK0E,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvB3E,OAAA;cAAO6E,OAAO,EAAC,OAAO;cAACH,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAmB;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACzEzE,OAAA;cACImF,IAAI,EAAC,QAAQ;cACbL,EAAE,EAAC,OAAO;cACV5B,IAAI,EAAC,OAAO;cACZwB,SAAS,EAAC,cAAc;cACxBvB,KAAK,EAAErC,QAAQ,CAACO,KAAM;cACtB0D,QAAQ,EAAE/B,YAAa;cACvByC,GAAG,EAAC,MAAM;cACVC,IAAI,EAAC,MAAM;cACXN,WAAW,EAAC,sBAAsB;cAClCJ,QAAQ;YAAA;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eAENzE,OAAA;YAAK0E,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvB3E,OAAA;cAAO0E,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAmB;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACzDzE,OAAA;cAAK0E,SAAS,EAAC,aAAa;cAAAC,QAAA,gBACxB3E,OAAA;gBAAA2E,QAAA,gBAAG3E,OAAA;kBAAA2E,QAAA,EAAQ;gBAAK;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAAC3D,QAAQ,CAACQ,eAAe;cAAA;gBAAAgD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACxDzE,OAAA;gBAAA2E,QAAA,gBAAG3E,OAAA;kBAAA2E,QAAA,EAAQ;gBAAa;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,MAAE,EAAC,CAChCV,UAAU,CAACjD,QAAQ,CAACO,KAAK,IAAI,CAAC,CAAC,GAAG4C,QAAQ,CAACnD,QAAQ,CAACM,QAAQ,IAAI,CAAC,CAAC,EACpEuE,OAAO,CAAC,CAAC,CAAC;cAAA;gBAAArB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eAENzE,OAAA;YAAK0E,SAAS,EAAC,cAAc;YAAAC,QAAA,gBACzB3E,OAAA;cACImF,IAAI,EAAC,QAAQ;cACbT,SAAS,EAAC,iBAAiB;cAC3BY,QAAQ,EAAExD,OAAO,IAAI,CAACF,gBAAiB;cAAA+C,QAAA,EAEtC7C,OAAO,GAAG,eAAe,GAAG;YAAqB;cAAAwC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC,eACTzE,OAAA,CAACN,IAAI;cAACkG,EAAE,EAAC,eAAe;cAAClB,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAAC;YAEvD;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACvE,EAAA,CA5VID,kBAAkB;EAAA,QACHT,WAAW,EACXC,WAAW;AAAA;AAAAoG,EAAA,GAF1B5F,kBAAkB;AA8VxB,eAAeA,kBAAkB;AAAC,IAAA4F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}